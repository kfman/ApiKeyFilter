GET {{BaseUrl}}/WeatherForeCast
Accept: application/json
Content-Type: application/json
ApiKey: {{ApiMasterKey}}

> {%
client.test("Calling weather controller with ApiKey", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}
###

GET {{BaseUrl}}/WeatherForeCast
Accept: application/json
Content-Type: application/json

> {%
client.test("Call Weather controller without ApiKey --> 401", function() {
  client.assert(response.status === 401, "Response status is not 401");
});
%}
###

GET {{BaseUrl}}/api/accessControl/ApiKey
Accept: application/json
Content-Type: application/json
ApiKey: {{ApiMasterKey}}

> {%
client.test("Call ApiKey Controller with MasterKey", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}

###

POST {{BaseUrl}}/api/accessControl/ApiKey
Accept: application/json
Content-Type: application/json
ApiKey: {{ApiMasterKey}}

{
  "description": "Midas Training"
}

###

POST {{BaseUrl}}/api/accessControl/ApiKey
Accept: application/json
Content-Type: application/json
ApiKey: {{ApiMasterKey}}

{
  "description": "Weather test key"
}

> {%
client.test("Creating new ApiKey", function (){
    client.assert(response.status === 200, "Error creating new ApiKey");
    client.global.set("new_api_key", response.body.id);
}) 
 %}

###

POST {{BaseUrl}}/api/accessControl/ApiKey/{{new_api_key}}/role/admin
Accept: application/json
Content-Type: application/json
ApiKey: {{ApiMasterKey}}

###

POST {{BaseUrl}}/api/accessControl/ApiKey/{{new_api_key}}/role/weather
Accept: application/json
Content-Type: application/json
ApiKey: {{ApiMasterKey}}

> {%
client.test("Creting new role", function(){
    client.assert(response.status === 200, "Error creating new role")
});
%}

###

GET {{BaseUrl}}/api/accessControl/ApiKey/{{new_api_key}}
Accept: application/json
Content-Type: application/json
ApiKey: {{ApiMasterKey}}

###

GET {{BaseUrl}}/WeatherForeCast
Accept: application/json
Content-Type: application/json
ApiKey: {{new_api_key}}

> {%
client.test("Calling weather controller with ApiKey", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}
###

GET {{BaseUrl}}/WeatherForeCast
Accept: application/json
Content-Type: application/json
ApiKey: 3ef08e8b-4c19-4442-8f7d-203fc652c685

> {%
client.test("Calling weather controller with ApiKey", function() {
  client.assert(response.status === 401, "Response status is not 401");
});
%}
###

GET {{BaseUrl}}/WeatherForeCast
Accept: application/json
Content-Type: application/json
ApiKey: {{new_api_key}}

> {%
client.test("Calling weather controller with ApiKey", function() {
  client.assert(response.status === 200, "Response status is not 200");
});
%}
###
